{"version":3,"sources":["logic/operate.js","components/Answer.js","components/calculator.js","logic/calculate.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Answer","props","this","total","next","className","React","PureComponent","Calculator","useState","state","callBack","useEffect","btns","document","querySelectorAll","Array","from","forEach","btn","addEventListener","obj","buttonName","value","getAttribute","match","includes","parseFloat","type","data","App","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e4dc047.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    try {\n      return one.mod(two).toString();\n    } catch (err) {\n      return \"Can't modulate by 0.\";\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Answer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    Answer.propTypes = {\n      total: PropTypes.string.isRequired,\n      operation: PropTypes.string.isRequired,\n      next: PropTypes.string.isRequired,\n    };\n  }\n\n  render() {\n    const { total, operation, next } = this.props;\n    return (\n      <span className=\"answer d-flex\">\n        { total }\n        { operation }\n        { next }\n      </span>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport calculate from '../logic/calculate';\nimport Answer from './Answer';\nimport './css/calculator.css';\n\nconst Calculator = () => {\n  const [state, callBack] = useState({\n    total: '0',\n    next: null,\n    operation: null,\n  });\n\n  useEffect(() => {\n    const btns = document.querySelectorAll('button');\n    Array.from(btns).forEach((btn) => {\n      btn.addEventListener('click', () => {\n        const value = btn.getAttribute('data');\n        callBack(calculate(state, value));\n      });\n    });\n  }, [state]);\n\n  const { total, next, operation } = state;\n  return (\n    <div className=\"calculator cols\">\n      <Answer\n        total={total}\n        next={next}\n        operation={operation}\n      />\n      <span className=\"d-flex row\">\n        <button type=\"button\" data=\"AC\">AC</button>\n        <button type=\"button\" data=\"+/-\">\n          +\n          <small>/</small>\n          -\n        </button>\n        <button type=\"button\" data=\"%\">%</button>\n        <button type=\"button\" data=\"รท\" className=\"operator\">&divide;</button>\n      </span>\n      <span className=\"d-flex row\">\n        <button type=\"button\" data=\"7\">7</button>\n        <button type=\"button\" data=\"8\">8</button>\n        <button type=\"button\" data=\"9\">9</button>\n        <button type=\"button\" data=\"x\" className=\"operator\">&times;</button>\n      </span>\n      <span className=\"d-flex row\">\n        <button type=\"button\" data=\"4\">4</button>\n        <button type=\"button\" data=\"5\">5</button>\n        <button type=\"button\" data=\"6\">6</button>\n        <button type=\"button\" data=\"-\" className=\"operator\">-</button>\n      </span>\n      <span className=\"d-flex row\">\n        <button type=\"button\" data=\"1\">1</button>\n        <button type=\"button\" data=\"2\">2</button>\n        <button type=\"button\" data=\"3\">3</button>\n        <button type=\"button\" data=\"+\" className=\"operator\">+</button>\n      </span>\n      <span className=\"d-flex row\">\n        <button type=\"button\" data=\"0\" className=\"zero\">0</button>\n        <button type=\"button\" data=\".\">.</button>\n        <button type=\"button\" data=\"=\" className=\"operator\">=</button>\n      </span>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: '0',\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport Calculator from './components/calculator';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Calculator />\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}